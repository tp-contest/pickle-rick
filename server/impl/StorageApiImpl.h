/**
 * Pickle Rick API
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * StorageApiImpl.h
 *
 *
 */

#ifndef STORAGE_API_IMPL_H_
#define STORAGE_API_IMPL_H_

#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <StorageApi.h>

#include <pistache/optional.h>

#include <string>
#include "Contest.h"
#include "ContestFiles.h"
#include "ContestFilesId.h"
#include "Solution.h"
#include "SolutionFiles.h"
#include "SolutionFilesId.h"
#include "Task.h"
#include "TaskFile.h"
#include "TaskFileId.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class StorageApiImpl : public org::openapitools::server::api::StorageApi {
 public:
  StorageApiImpl(std::shared_ptr<Pistache::Rest::Router>);
  ~StorageApiImpl() {}

  void get_contest_files(const Contest &contest,
                         Pistache::Http::ResponseWriter &response);
  void get_solution_files(
      const Pistache::Optional<int32_t> &contestCreaterUserId,
      const Pistache::Optional<int32_t> &contestId,
      const Pistache::Optional<int32_t> &userId, const Solution &solution,
      Pistache::Http::ResponseWriter &response);
  void get_task_file(const Pistache::Optional<int32_t> &contestCreaterUserId,
                     const Task &task,
                     Pistache::Http::ResponseWriter &response);
  void upload_contest_files(const Pistache::Rest::Request &request,
                            Pistache::Http::ResponseWriter &response);
  void upload_solution_files(const Pistache::Rest::Request &request,
                             Pistache::Http::ResponseWriter &response);
  void upload_task_file(const Pistache::Rest::Request &request,
                        Pistache::Http::ResponseWriter &response);
};

}  // namespace api
}  // namespace server
}  // namespace openapitools
}  // namespace org

#endif