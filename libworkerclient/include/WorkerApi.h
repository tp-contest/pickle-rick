/**
 * TP-Contest Worker
 * No description provided (generated by Openapi Generator
 * https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * WorkerApi.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_WorkerApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_WorkerApi_H_

#include "ApiClient.h"

#include <vector>
#include "Slot.h"
#include "Task.h"

#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;

class WorkerApi {
 public:
  explicit WorkerApi(std::shared_ptr<ApiClient> apiClient);

  virtual ~WorkerApi();

  /// <summary>
  ///
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  pplx::task<std::vector<std::shared_ptr<Slot>>> freeSlots();
  /// <summary>
  ///
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="task">Inventory item to add</param>
  pplx::task<void> sendTask(std::vector<std::shared_ptr<Task>> task);

 protected:
  std::shared_ptr<ApiClient> m_ApiClient;
};

}  // namespace api
}  // namespace client
}  // namespace openapitools
}  // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_API_WorkerApi_H_ */
